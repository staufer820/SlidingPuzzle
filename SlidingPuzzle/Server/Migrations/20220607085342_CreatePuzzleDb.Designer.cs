// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SlidingPuzzle.Server.Data;

#nullable disable

namespace SlidingPuzzle.Server.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220607085342_CreatePuzzleDb")]
    partial class CreatePuzzleDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SlidingPuzzle.Shared.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PwHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("SlidingPuzzle.Shared.PlayerGame", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("PlayerId")
                        .HasColumnType("int");

                    b.Property<int>("PuzzleId")
                        .HasColumnType("int");

                    b.Property<float>("TimePassed")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("PlayerGames");
                });

            modelBuilder.Entity("SlidingPuzzle.Shared.Puzzle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.HasKey("Id");

                    b.ToTable("Puzzles");
                });

            modelBuilder.Entity("SlidingPuzzle.Shared.PuzzlePiece", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<byte[]>("Image")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("PuzzleId")
                        .HasColumnType("int");

                    b.Property<int>("X")
                        .HasColumnType("int");

                    b.Property<int>("Y")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PuzzleId");

                    b.ToTable("PuzzlePieces");
                });

            modelBuilder.Entity("SlidingPuzzle.Shared.PuzzlePiecePosition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("PlayerGameId")
                        .HasColumnType("int");

                    b.Property<int>("PuzzlePieceId")
                        .HasColumnType("int");

                    b.Property<int>("X")
                        .HasColumnType("int");

                    b.Property<int>("Y")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlayerGameId");

                    b.HasIndex("PuzzlePieceId");

                    b.ToTable("PuzzlePiecePositions");
                });

            modelBuilder.Entity("SlidingPuzzle.Shared.PuzzlePiece", b =>
                {
                    b.HasOne("SlidingPuzzle.Shared.Puzzle", "Puzzle")
                        .WithMany("PuzzlePieces")
                        .HasForeignKey("PuzzleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Puzzle");
                });

            modelBuilder.Entity("SlidingPuzzle.Shared.PuzzlePiecePosition", b =>
                {
                    b.HasOne("SlidingPuzzle.Shared.PlayerGame", "PlayerGame")
                        .WithMany("PuzzlePiecePositions")
                        .HasForeignKey("PlayerGameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SlidingPuzzle.Shared.PuzzlePiece", "PuzzlePiece")
                        .WithMany("PuzzlePiecePositions")
                        .HasForeignKey("PuzzlePieceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PlayerGame");

                    b.Navigation("PuzzlePiece");
                });

            modelBuilder.Entity("SlidingPuzzle.Shared.PlayerGame", b =>
                {
                    b.Navigation("PuzzlePiecePositions");
                });

            modelBuilder.Entity("SlidingPuzzle.Shared.Puzzle", b =>
                {
                    b.Navigation("PuzzlePieces");
                });

            modelBuilder.Entity("SlidingPuzzle.Shared.PuzzlePiece", b =>
                {
                    b.Navigation("PuzzlePiecePositions");
                });
#pragma warning restore 612, 618
        }
    }
}
